import configparser
import disnake
from disnake.ext import commands
from disnake import TextInputStyle

config = configparser.ConfigParser()  # —Å–æ–∑–¥–∞—ë–º –æ–±—ä–µ–∫—Ç–∞ –ø–∞—Ä—Å–µ—Ä–∞
config.read("config.ini")  # —á–∏—Ç–∞–µ–º –∫–æ–Ω—Ñ–∏–≥

bot = commands.InteractionBot(test_guilds=[int(config["Auth"]["guild_id"])])

@bot.event
async def on_ready():
    await bot.change_presence(activity=disnake.Activity(type=disnake.ActivityType.watching, name="–Ω–∞ —Ä–∞–∑–≤–∏—Ç–∏–µ Bisquit.Host"))


@bot.slash_command(
    name="create-button",
    description="–ó–∞—Å–ø–∞–≤–Ω–∏—Ç—å –∫–Ω–æ–ø–∫—É —Å–æ–∑–¥–∞–Ω–∏—è —Ç–∏–∫–µ—Ç–∞.",
)
@commands.has_guild_permissions(administrator=True)
async def buttons(inter: disnake.ApplicationCommandInteraction):
    embed = disnake.Embed(
        title="–°–æ–∑–¥–∞—Ç—å —Ç–∏–∫–µ—Ç",
        description="–ï—Å–ª–∏ —É –≤–∞—Å –≤–æ–∑–Ω–∏–∫–ª–∞ –ø—Ä–æ–±–ª–µ–º–∞ –∏–ª–∏ –≤–∞–º –Ω—É–∂–Ω–∞ –ø–æ–º–æ—â—å. –í—ã –º–æ–∂–µ—Ç–µ —Å–æ–∑–¥–∞—Ç—å —Ç–∏–∫–µ—Ç, –¥–ª—è —ç—Ç–æ–≥–æ –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ. –ö–æ–º–∞–Ω–¥–∞ –ø–æ–¥–¥–µ—Ä–∂–∫–∏ —Å–≤—è–∂–µ—Ç—Å—è —Å –≤–∞–º–∏ –∏ –ø–æ—Å—Ç–∞—Ä–∞–µ—Ç—Å—è –í–∞–º –ø–æ–º–æ—á—å.",
        color=0x46ec12,
    )
    await inter.channel.send(
        components=[disnake.ui.Button(label="–°–æ–∑–¥–∞—Ç—å —Ç–∏–∫–µ—Ç", style=disnake.ButtonStyle.success, custom_id="+", emoji="üì©")],
        embed=embed
    )
    await inter.send("–ö–Ω–æ–ø–∫–∞ —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω–∞.", ephemeral=True)

@bot.listen("on_button_click")
async def help_listener(inter: disnake.MessageInteraction):
    if inter.component.custom_id not in ["+", "-"]:
        return
    
    if inter.component.custom_id == "+":
        await inter.response.send_modal(modal=MyModal())

    elif inter.component.custom_id == "-":
        await inter.channel.delete()

class MyModal(disnake.ui.Modal):
    def __init__(self):
        components = [
            disnake.ui.TextInput(
                label="–¢–µ–º–∞",
                placeholder="–í–≤–µ–¥–∏—Ç–µ —Ç–µ–º—É —Ç–∏–∫–µ—Ç–∞",
                custom_id="theme",
                style=TextInputStyle.short,
                max_length=50,
            ),
            disnake.ui.TextInput(
                label="–û–ø–∏—Å–∞–Ω–∏–µ –ø—Ä–æ–±–ª–µ–º—ã",
                placeholder="–ü–æ–¥—Ä–æ–±–Ω–æ –æ–ø–∏—à–∏—Ç–µ –≤–∞—à—É –ø—Ä–æ–±–ª–µ–º—É.",
                custom_id="description",
                style=TextInputStyle.paragraph,
            ),
        ]
        super().__init__(title="–°–æ–∑–¥–∞—Ç—å —Ç–∏–∫–µ—Ç", components=components)

    async def callback(self, inter: disnake.ModalInteraction):
        guild22 = inter.guild
        await inter.response.send_message("–í–∞—à —Ç–∏–∫–µ—Ç —Å–æ–∑–¥–∞–Ω.", ephemeral=True)
        techSupport = guild22.get_role(int(config["Roles"]["support"]))
        preTechSupport = guild22.get_role(int(config["Roles"]["sub_support"]))
        overwrites = {
            guild22.default_role: disnake.PermissionOverwrite(view_channel=False),
            inter.author: disnake.PermissionOverwrite(view_channel=True),
            techSupport: disnake.PermissionOverwrite(view_channel=True),
            preTechSupport: disnake.PermissionOverwrite(view_channel=True)
        }
        channel = await inter.channel.category.create_text_channel(name= f"ticket-{inter.author}", overwrites=overwrites)
        embed = disnake.Embed(
            title="–í–∞—à —Ç–∏–∫–µ—Ç",
            color=disnake.Colour.green(),
        )
        for key, value in inter.text_values.items():
            embed.add_field(
                name=replaceName(key),
                value=value[:1024],
                inline=False,
            )
        await channel.send(embed = embed, components=[
            disnake.ui.Button(label="–ó–∞–∫—Ä—ã—Ç—å —Ç–∏–∫–µ—Ç", style=disnake.ButtonStyle.danger, custom_id="-", emoji="üîí"),
        ])        

def replaceName(arg: str):
    if arg == "theme": 
        return "–¢–µ–º–∞"
    else: 
        return "–û–ø–∏—Å–∞–Ω–∏–µ"


bot.run(config["Auth"]["token"])